//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zza.Client.ZzaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ZzaService.IZzaServices")]
    public interface IZzaServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaServices/GetProducts", ReplyAction="http://tempuri.org/IZzaServices/GetProductsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product> GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IZzaServices/GetProducts", ReplyAction="http://tempuri.org/IZzaServices/GetProductsResponse")]
        System.IAsyncResult BeginGetProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product> EndGetProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaServices/GetCustomers", ReplyAction="http://tempuri.org/IZzaServices/GetCustomersResponse")]
        System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer> GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IZzaServices/GetCustomers", ReplyAction="http://tempuri.org/IZzaServices/GetCustomersResponse")]
        System.IAsyncResult BeginGetCustomers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer> EndGetCustomers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaServices/SubmitOrder", ReplyAction="http://tempuri.org/IZzaServices/SubmitOrderResponse")]
        void SubmitOrder(Zza.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IZzaServices/SubmitOrder", ReplyAction="http://tempuri.org/IZzaServices/SubmitOrderResponse")]
        System.IAsyncResult BeginSubmitOrder(Zza.Entities.Order order, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitOrder(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZzaServicesChannel : Zza.Client.ZzaService.IZzaServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZzaServicesClient : System.ServiceModel.ClientBase<Zza.Client.ZzaService.IZzaServices>, Zza.Client.ZzaService.IZzaServices {
        
        private BeginOperationDelegate onBeginGetProductsDelegate;
        
        private EndOperationDelegate onEndGetProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomersDelegate;
        
        private EndOperationDelegate onEndGetCustomersDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomersCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitOrderDelegate;
        
        private EndOperationDelegate onEndSubmitOrderDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitOrderCompletedDelegate;
        
        public ZzaServicesClient() {
        }
        
        public ZzaServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZzaServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZzaServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZzaServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetProductsCompletedEventArgs> GetProductsCompleted;
        
        public event System.EventHandler<GetCustomersCompletedEventArgs> GetCustomersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitOrderCompleted;
        
        public System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product> GetProducts() {
            return base.Channel.GetProducts();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product> EndGetProducts(System.IAsyncResult result) {
            return base.Channel.EndGetProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetProducts(callback, asyncState);
        }
        
        private object[] OnEndGetProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Product> retVal = this.EndGetProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductsCompleted(object state) {
            if ((this.GetProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductsAsync() {
            this.GetProductsAsync(null);
        }
        
        public void GetProductsAsync(object userState) {
            if ((this.onBeginGetProductsDelegate == null)) {
                this.onBeginGetProductsDelegate = new BeginOperationDelegate(this.OnBeginGetProducts);
            }
            if ((this.onEndGetProductsDelegate == null)) {
                this.onEndGetProductsDelegate = new EndOperationDelegate(this.OnEndGetProducts);
            }
            if ((this.onGetProductsCompletedDelegate == null)) {
                this.onGetProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductsDelegate, null, this.onEndGetProductsDelegate, this.onGetProductsCompletedDelegate, userState);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer> GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCustomers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer> EndGetCustomers(System.IAsyncResult result) {
            return base.Channel.EndGetCustomers(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCustomers(callback, asyncState);
        }
        
        private object[] OnEndGetCustomers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Zza.Entities.Customer> retVal = this.EndGetCustomers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomersCompleted(object state) {
            if ((this.GetCustomersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomersAsync() {
            this.GetCustomersAsync(null);
        }
        
        public void GetCustomersAsync(object userState) {
            if ((this.onBeginGetCustomersDelegate == null)) {
                this.onBeginGetCustomersDelegate = new BeginOperationDelegate(this.OnBeginGetCustomers);
            }
            if ((this.onEndGetCustomersDelegate == null)) {
                this.onEndGetCustomersDelegate = new EndOperationDelegate(this.OnEndGetCustomers);
            }
            if ((this.onGetCustomersCompletedDelegate == null)) {
                this.onGetCustomersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomersCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomersDelegate, null, this.onEndGetCustomersDelegate, this.onGetCustomersCompletedDelegate, userState);
        }
        
        public void SubmitOrder(Zza.Entities.Order order) {
            base.Channel.SubmitOrder(order);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitOrder(Zza.Entities.Order order, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitOrder(order, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSubmitOrder(System.IAsyncResult result) {
            base.Channel.EndSubmitOrder(result);
        }
        
        private System.IAsyncResult OnBeginSubmitOrder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Zza.Entities.Order order = ((Zza.Entities.Order)(inValues[0]));
            return this.BeginSubmitOrder(order, callback, asyncState);
        }
        
        private object[] OnEndSubmitOrder(System.IAsyncResult result) {
            this.EndSubmitOrder(result);
            return null;
        }
        
        private void OnSubmitOrderCompleted(object state) {
            if ((this.SubmitOrderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitOrderAsync(Zza.Entities.Order order) {
            this.SubmitOrderAsync(order, null);
        }
        
        public void SubmitOrderAsync(Zza.Entities.Order order, object userState) {
            if ((this.onBeginSubmitOrderDelegate == null)) {
                this.onBeginSubmitOrderDelegate = new BeginOperationDelegate(this.OnBeginSubmitOrder);
            }
            if ((this.onEndSubmitOrderDelegate == null)) {
                this.onEndSubmitOrderDelegate = new EndOperationDelegate(this.OnEndSubmitOrder);
            }
            if ((this.onSubmitOrderCompletedDelegate == null)) {
                this.onSubmitOrderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitOrderCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitOrderDelegate, new object[] {
                        order}, this.onEndSubmitOrderDelegate, this.onSubmitOrderCompletedDelegate, userState);
        }
    }
}
